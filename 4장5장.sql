// 4장 SELECT 문의 기본 형식
desc emp;

select * from emp;

select empno, ename, deptno from emp;

select deptno from emp;

select distinct deptno from emp;

select distinct job, deptno from emp;   // 중복 제거

SELECT ALL JOB, DEPTNO FROM EMP;  //중복 제거 X

SELECT ENAME, SAL, SAL*12+COMM, COMM FROM EMP;  //열과 연산식

SELECT ENAME, SAL, SAL*12+COMM AS ANNSAL, COMM FROM EMP;  // 별칭 지정

SELECT * FROM EMP ORDER BY SAL;  //오름차순

SELECT * FROM EMP ORDER BY SAL DESC;  //내림차순

SELECT * FROM EMP ORDER BY DEPTNO ASC, SAL DESC;  //1순위 2순위 오름차순 내림차순 동시

//5장 더 정확하고 다양하게 결과를 출력하는 WHERE절과 연산자
SELECT * FROM EMP WHERE DEPTNO = 30;   // WHERE 절

SELECT * FROM EMP WHERE DEPTNO = 30 AND JOB = 'SALESMAN';  // WHERE AND

SELECT * FROM EMP WHERE DEPTNO = 30 OR JOB = 'CLERK';  //WHERE OR

SELECT * FROM EMP WHERE SAL * 12 = 36000;  //산술 연산자

SELECT * FROM EMP WHERE SAL >= 3000;   //비교 연산자

SELECT * FROM EMP WHERE ENAME >= 'F';  //사원이름 첫글자가 F보다 뒤에 있는 문자열들 출력

SELECT * FROM EMP WHERE ENAME <= 'FORZ';  //비교문자 여러개

SELECT * FROM EMP WHERE SAL != 3000;   //등가비교연산자 (FALSE)

SELECT * FROM EMP WHERE SAL <> 3000;   //등가비교연산자 (FALSE)

SELECT * FROM EMP WHERE SAL ^= 3000;   //등가비교연산자 (FALSE)

SELECT * FROM EMP WHERE NOT SAL = 3000;  //논리부정연산자

SELECT * FROM EMP WHERE JOB = 'MANAGER' OR JOB = 'SALESMAN' OR JOB = 'CLERK';  //IN연산자 예시

SELECT * FROM EMP WHERE JOB IN ('MANAGER', 'SALESMAN', 'CLERK');  //IN연산자

SELECT * FROM EMP WHERE JOB != 'MANAGER' AND JOB <> 'SALESMAN' AND JOB ^= 'CLERK';

SELECT * FROM EMP WHERE JOB NOT IN ('MANAGER', 'SALESMAN', 'CLERK');  //NOT IN문

SELECT * FROM EMP WHERE SAL >= 2000 AND SAL <= 3000;  //비교 연산자 AND 연산자

SELECT * FROM EMP WHERE SAL BETWEEN 2000 AND 3000;  // BETWEEN A AND B

SELECT * FROM EMP WHERE SAL NOT BETWEEN 2000 AND 3000;  //NOT BETWEEN A AND B

SELECT * FROM EMP WHERE ENAME LIKE 'S%';  //LIKE 문

SELECT * FROM EMP WHERE ENAME LIKE '_L%';  //두번째 글자가 L인 사원

SELECT * FROM EMP WHERE ENAME LIKE '%AM%';

SELECT * FROM EMP WHERE ENAME NOT LIKE '%AM%';

SELECT ENAME, SAL, SAL*12+COMM AS ANNSAL, COMM FROM EMP;

SELECT * FROM EMP WHERE COMM = NULL;  //NULL 비교하기

SELECT * FROM EMP WHERE COMM IS NULL;  // IS NULL

SELECT * FROM EMP WHERE MGR IS NOT NULL;  //IN NOT NULL

SELECT * FROM EMP WHERE SAL > NULL AND COMM IS NULL; //AND연산자와 IS NULL 연산자

SELECT * FROM EMP WHERE SAL > NULL OR COMM IS NOT NULL;  //OR 연산자와 IS NULL 연산자 사용하기

SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10 UNION SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 20;  //집합 연산자

SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10 UNION SELECT EMPNO, ENAME, SAL FROM WHERE EMP WHERE DEPTNO = 20;  //열 갯수 다르면 오류 발생

SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10 UNION SELECT ENAME, EMPNO, DEPTNO, SAL FROM EMP WHERE DEPTNO = 20;  //출력 열의 자료형이 다를때 오류발생

SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10 UNION SELECT SAL, JOB, DEPTNO, SAL FROM EMP WHERE DEPTNO = 20;  //출력 열 개수와 자료형이 같을때 정상

SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10 UNION SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10;  //출력결과 데이터가 같을때

SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10 UNION ALL SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10;  //UNION ALL은 중복 데이터도 출력

SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP MINUS SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10;  //차집합 MINUS

SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP INTERSECT SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10;  //교집합 INTERSECT

  